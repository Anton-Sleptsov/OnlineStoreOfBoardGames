// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineStoreOfBoardGames.Data;

#nullable disable

namespace OnlineStoreOfBoardGames.Data.Migrations
{
    [DbContext(typeof(PortalDbContext))]
    partial class PortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoardGameUser", b =>
                {
                    b.Property<int>("FavoriteBoardsGamesId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersWhoFavoriteThisBoardGameId")
                        .HasColumnType("integer");

                    b.HasKey("FavoriteBoardsGamesId", "UsersWhoFavoriteThisBoardGameId");

                    b.HasIndex("UsersWhoFavoriteThisBoardGameId");

                    b.ToTable("BoardGameUser");
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.Alerts.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNewBoardGameAlert")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.Alerts.AlertUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WhenUserSawAlert")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.HasIndex("UserId");

                    b.ToTable("AlertUser");
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.BoardGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Essence")
                        .HasColumnType("text");

                    b.Property<string>("MiniTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BoardGames");
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Permission")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BoardGameUser", b =>
                {
                    b.HasOne("OnlineStoreOfBoardGames.Data.Model.BoardGame", null)
                        .WithMany()
                        .HasForeignKey("FavoriteBoardsGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreOfBoardGames.Data.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersWhoFavoriteThisBoardGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.Alerts.AlertUser", b =>
                {
                    b.HasOne("OnlineStoreOfBoardGames.Data.Model.Alerts.Alert", "Alert")
                        .WithMany("UsersWhoAlreadySawIt")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreOfBoardGames.Data.Model.User", "User")
                        .WithMany("AlertsWhichISaw")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.Alerts.Alert", b =>
                {
                    b.Navigation("UsersWhoAlreadySawIt");
                });

            modelBuilder.Entity("OnlineStoreOfBoardGames.Data.Model.User", b =>
                {
                    b.Navigation("AlertsWhichISaw");
                });
#pragma warning restore 612, 618
        }
    }
}
